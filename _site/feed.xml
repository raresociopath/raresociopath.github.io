<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>raresociopath.github.io</title>
    <description>Just another technical blog</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Fri, 09 Nov 2018 17:39:04 +0200</pubDate>
    <lastBuildDate>Fri, 09 Nov 2018 17:39:04 +0200</lastBuildDate>
    <generator>Jekyll v3.7.4</generator>
    
      <item>
        <title>Ansible local configuration</title>
        <description>
</description>
        <pubDate>Fri, 09 Nov 2018 00:00:00 +0200</pubDate>
        <link>http://localhost:4000/2018/local-ansible/</link>
        <guid isPermaLink="true">http://localhost:4000/2018/local-ansible/</guid>
        
        
        <category>top</category>
        
      </item>
    
      <item>
        <title>Inside an Organization</title>
        <description>&lt;p&gt;An an open organization, leaders must be sensitive to nuances—knowing how to share and how to invite collaboration in
ways that keep an organization from dissolving into chaos. A
leader’s mandate to help people do their best work involves not
just an understanding of leadership capabilities like connection,
trust, and transparency, but also a certain familiarity with—and
sensitivity to—the feelings, emotions, and passions of the people
that leader is trying to help.&lt;/p&gt;
</description>
        <pubDate>Fri, 09 Nov 2018 00:00:00 +0200</pubDate>
        <link>http://localhost:4000/2018/inside/</link>
        <guid isPermaLink="true">http://localhost:4000/2018/inside/</guid>
        
        
      </item>
    
      <item>
        <title>Android Programming</title>
        <description>&lt;p&gt;lalal&lt;/p&gt;
</description>
        <pubDate>Thu, 08 Nov 2018 00:00:00 +0200</pubDate>
        <link>http://localhost:4000/2018/android-prog/</link>
        <guid isPermaLink="true">http://localhost:4000/2018/android-prog/</guid>
        
        
        <category>programming</category>
        
      </item>
    
      <item>
        <title>i3 window manager</title>
        <description>&lt;p&gt;i3 workspace manager ( i3wm)&lt;/p&gt;

&lt;h1 id=&quot;why-i3&quot;&gt;Why i3?&lt;/h1&gt;
&lt;p&gt;For more than 7 years i’ve been using this very light workspace manager that worked just perfect for everything I needed.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Before using i3&lt;/strong&gt;
You should realize the follow:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;You love shortcuts.&lt;/li&gt;
  &lt;li&gt;You can do everything without using the mouse.&lt;/li&gt;
  &lt;li&gt;You love multiple windows on the same screen.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;installation&quot;&gt;Installation&lt;/h1&gt;
&lt;p&gt;dnf install i3 i3lock&lt;/p&gt;

&lt;h1 id=&quot;my-configurations&quot;&gt;My configurations&lt;/h1&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;#i3 config ( raresociopath )

#-----------------------------------

#mod
set $mod Mod4

#font
font pango:DejaVu Sans Mono 8

#floating_modifier
floating_modifier $mod

#-----------------------------------
#Shortcuts

# TODO:init
# Start script for creating folder hierarchy
# install the stuff
# run crons
# bindsym $mod+Shift+Alt+i 

# start terminator
bindsym $mod+Return exec terminator -l raresociopath -p raresociopath
bindsym $mod+Shift+t exec terminator


# start Google Chrome
bindsym $mod+Shift+g exec google-chrome

# start Firefox 
bindsym $mod+Shift+f exec firefox 

# start Nautilus
bindsym $mod+Shift+n exec nautilus 

# start WireShark
#bindsym $mod+Shift+n exec wireshark 

# change backroung
bindsym $mod+Shift+x exec --no-startup-id &quot;/usr/bin/feh --bg-scale ~/yin/configs/i3wm/background/3.jpg&quot;

# black bacground
bindsym $mod+Shift+u exec --no-startup-id &quot;/usr/bin/feh --bg-scale ~/yin/configs/i3wm/background/6.jpg&quot;

#lock
bindsym $mod+Shift+0 exec i3lock --color 000000 

#-----------------------------------

# kill focused window
bindsym $mod+Shift+q kill

# start dmenu (a program launcher)
bindsym $mod+d exec dmenu_run

# exec --no-startup-id xsetroot -solid &quot;#000000&quot;

# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+Ctrl+h split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# switch to workspace
bindsym $mod+1 workspace 1
bindsym $mod+2 workspace 2
bindsym $mod+3 workspace 3
bindsym $mod+4 workspace 4
bindsym $mod+5 workspace 5
bindsym $mod+6 workspace 6
bindsym $mod+7 workspace 7
bindsym $mod+8 workspace 8
bindsym $mod+9 workspace 9
bindsym $mod+0 workspace 10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace 1
bindsym $mod+Shift+2 move container to workspace 2
bindsym $mod+Shift+3 move container to workspace 3
bindsym $mod+Shift+4 move container to workspace 4
bindsym $mod+Shift+5 move container to workspace 5
bindsym $mod+Shift+6 move container to workspace 6
bindsym $mod+Shift+7 move container to workspace 7
bindsym $mod+Shift+8 move container to workspace 8
bindsym $mod+Shift+9 move container to workspace 9
#bindsym $mod+Shift+0 move container to workspace 10

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec &quot;i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -b 'Yes, exit i3' 'i3-msg exit'&quot;

# resize window (you can also use the mouse for that)
mode &quot;resize&quot; {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym h resize shrink width 10 px or 10 ppt
        bindsym j resize grow height 10 px or 10 ppt
        bindsym k resize shrink height 10 px or 10 ppt
        bindsym l resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape
        bindsym Return mode &quot;default&quot;
        bindsym Escape mode &quot;default&quot;
}

bindsym $mod+r mode &quot;resize&quot;

# class                 border  backgr. text    indicator
client.focused          #545454 #757575 #ffffff #000000
client.focused_inactive #333333 #5f676a #ffffff #484e50
client.unfocused        #333333 #222222 #888888 #292d2e
client.urgent           #2f343a #900000 #ffffff #900000
client.placeholder      #000000 #0c0c0c #ffffff #000000

# status bar
bar {
        status_command i3blocks

}
new_window 1pixel

# bar toggle, hide or show 
bindsym $mod+m bar mode toggle

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;i3blocks&quot;&gt;i3blocks&lt;/h1&gt;
</description>
        <pubDate>Thu, 08 Nov 2018 00:00:00 +0200</pubDate>
        <link>http://localhost:4000/2018/i3-workspace/</link>
        <guid isPermaLink="true">http://localhost:4000/2018/i3-workspace/</guid>
        
        
        <category>top</category>
        
      </item>
    
      <item>
        <title>Not a tech article</title>
        <description>&lt;h1 id=&quot;before-tech&quot;&gt;Before tech&lt;/h1&gt;

&lt;p&gt;Before implementing something you should first understand on what kind of project you’re gonna work.
In my experience I’ve managed to delimit a couple of types.&lt;/p&gt;

&lt;p&gt;1) The enterprise project
2) The start-up project
3) The personal project 
4) The internal project&lt;/p&gt;

&lt;p&gt;Each project type is different and requires different type of thinking and analysis.&lt;/p&gt;

&lt;p&gt;Let’s start with the ** ENTERPRISE PROJECT **&lt;/p&gt;
</description>
        <pubDate>Thu, 08 Nov 2018 00:00:00 +0200</pubDate>
        <link>http://localhost:4000/2018/test/</link>
        <guid isPermaLink="true">http://localhost:4000/2018/test/</guid>
        
        
        <category>ntech</category>
        
      </item>
    
      <item>
        <title>The start-up project</title>
        <description>&lt;h1 id=&quot;the-start-up-project&quot;&gt;The start-up project&lt;/h1&gt;

&lt;p&gt;Before implementing something you should first understand on what kind of project you’re gonna work.
In my experience I’ve managed to delimit a couple of types.&lt;/p&gt;

&lt;p&gt;1) The enterprise project
2) The start-up project
3) The personal project 
4) The internal project&lt;/p&gt;

&lt;p&gt;Each project type is different and requires different type of thinking and analysis.&lt;/p&gt;

&lt;p&gt;Let’s start with the ** ENTERPRISE PROJECT **&lt;/p&gt;
</description>
        <pubDate>Thu, 08 Nov 2018 00:00:00 +0200</pubDate>
        <link>http://localhost:4000/2018/startup/</link>
        <guid isPermaLink="true">http://localhost:4000/2018/startup/</guid>
        
        
        <category>ntech</category>
        
      </item>
    
      <item>
        <title>The enterprise project</title>
        <description>&lt;h1 id=&quot;the-start-up-project&quot;&gt;The start-up project&lt;/h1&gt;

&lt;p&gt;Before implementing something you should first understand on what kind of project you’re gonna work.
In my experience I’ve managed to delimit a couple of types.&lt;/p&gt;

&lt;p&gt;1) The enterprise project
2) The start-up project
3) The personal project 
4) The internal project&lt;/p&gt;

&lt;p&gt;Each project type is different and requires different type of thinking and analysis.&lt;/p&gt;

&lt;p&gt;Let’s start with the ** ENTERPRISE PROJECT **&lt;/p&gt;
</description>
        <pubDate>Thu, 08 Nov 2018 00:00:00 +0200</pubDate>
        <link>http://localhost:4000/2018/enterprise-project/</link>
        <guid isPermaLink="true">http://localhost:4000/2018/enterprise-project/</guid>
        
        
        <category>ntech</category>
        
      </item>
    
      <item>
        <title>Project Analysis</title>
        <description>
</description>
        <pubDate>Thu, 08 Nov 2018 00:00:00 +0200</pubDate>
        <link>http://localhost:4000/2018/analysis/</link>
        <guid isPermaLink="true">http://localhost:4000/2018/analysis/</guid>
        
        
        <category>ntech</category>
        
      </item>
    
      <item>
        <title>Terraform/AWS Best practices.</title>
        <description>&lt;p&gt;Alright, I’m not gonna write about what Terraform is and why it is great because 
the official documentation is doing that perfectly.&lt;/p&gt;

&lt;p&gt;Instead, I’m going to leave here a couple of notes about best practices using Ansible with AWS.&lt;/p&gt;

&lt;p&gt;So, If you don’t know what Ansible is and what it is used for please follow this link first:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.ansible.com/ansible/latest/index.html&quot;&gt;Official Ansible documentation&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;my-ansible-layout&quot;&gt;My Ansible layout&lt;/h2&gt;

&lt;p&gt;If you are struggling with finding a good layout that will fit your project
here are a couple of blueprints.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Keep Ansible layout as simple as possible.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;An example that just works perfectly.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ansible/
├── inventories
├── playbooks
└── README.md
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;Do not use project specific names in naming ansible directories.
We want Ansible scripts to be flexible.
Jenkins and so on.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;what-next&quot;&gt;What next?&lt;/h1&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;├── inventories
│   └── aws
│       ├── ec2.ini
│       ├── ec2.py
│       └── group_vars
├── playbooks
│   ├── files
│   │   ├── ssh_keys
│   │   └── ...
│   ├── roles
│   │   ├── base
│   │   ├── java
│   │   └── ...
│   ├── setup_base.yaml
│   └── setup.yaml
└── README.md
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;dynamic-inventories&quot;&gt;Dynamic inventories&lt;/h1&gt;

&lt;p&gt;AWS infrastructure is dynamic and so should be your scripts. You should never worry about the change of IP’s that’s why I recommend the use of dynamic inventories and good groupings.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;inventories/aws/
├── ec2.ini
├── ec2.py
└── group_vars
    ├── all # Project variables
    ├── tag_env_dev  # Dev environment variables
    └── tag_env_prod # Prod environment variables

# Inside tag_env_dev

tag_Env_dev/
├── vars.yaml
└── vault.yaml


&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ol&gt;
  &lt;li&gt;More about dynamic inventories &lt;a href=&quot;https://docs.ansible.com/ansible/latest/user_guide/intro_dynamic_inventory.html#example-aws-ec2-external-inventory-script&quot; target=&quot;_blank&quot;&gt;here.&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;entry-point&quot;&gt;Entry point&lt;/h2&gt;

&lt;p&gt;setup.yml is the entry point of your ansible scripts, 
that’s why it should be as clean as possible.
Try to only import plays in here.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;---
- import_playbook: setup_base.yaml
- import_playbook: setup_redis.yaml
...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;running-ansible-scripts-tagging&quot;&gt;Running ansible scripts. Tagging&lt;/h2&gt;
&lt;p&gt;This command should do everything.&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ansible-playbook -i inventories/aws playbooks/setup.yaml
ansible-playbook -i inventories/aws playbooks/setup.yaml --tags=base
ansible-playbook -i inventories/aws playbooks/setup.yaml --tags=authorized_keys
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;For a full example follow this link:
&lt;a href=&quot;https://github.com/raresociopath/ansible-layout-example&quot;&gt;Full example&lt;/a&gt;&lt;/p&gt;

&lt;div class=&quot;divider&quot;&gt;&lt;/div&gt;
</description>
        <pubDate>Mon, 29 Oct 2018 00:00:00 +0200</pubDate>
        <link>http://localhost:4000/2018/terraform-best-practices/</link>
        <guid isPermaLink="true">http://localhost:4000/2018/terraform-best-practices/</guid>
        
        
        <category>terraform</category>
        
      </item>
    
      <item>
        <title>Provisioning Autoscalable EKS with Terraform</title>
        <description>&lt;p&gt;Read before proceding:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.ansible.com/ansible/latest/index.html&quot; target=&quot;_blank&quot;&gt; What is ansible&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://kubernetes.io/docs/concepts/overview/what-is-kubernetes/&quot; target=&quot;_blank&quot;&gt; What is kubernetes &lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/kubernetes/kops/blob/master/README.md&quot; target=&quot;_blank&quot;&gt;What is Kops &lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;So, we are gonna write ansible scripts to provision k8s with the help of kops.&lt;/p&gt;

&lt;p&gt;The code is &lt;a href=&quot;https://github.com/raresociopath/k8s-ansible&quot; target=&quot;_blank&quot;&gt; here &lt;/a&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;k8s-ansible/
├── ansible.cfg
├── cluster.conf.d
├── create-cluster.yaml
├── delete-cluster.yaml
├── group_vars
├── inventory
├── kops-clusters
├── README.md
├── roles
├── utils
└── validate-cluster.yaml

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;create-cluster&quot;&gt;Create cluster&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;---
- include_role:
    name: base

- name: &quot;Create cluster &quot;
  shell: &amp;gt;
    kops create cluster 
    --cloud-labels=&quot;Team=MyTeam&quot;
    --admin-access=&amp;lt;to be changed&amp;gt;/32
    --kubernetes-version=
    --zones=
    --dns-zone=
    --master-count=
    --master-size=
    --master-volume-size=
    --cloud=aws
    --output yaml
    --state=s3://
    --node-size=
    --node-count=
    --node-volume-size=
    --topology=public
    --encrypt-etcd-storage
    --networking=canal
- name: &quot;Apply extra confs on cluster&quot;
  shell: &amp;gt;
    ./utils/genClusterConfig.py
    --cluster-name=
    --cluster-state=s3://
    --conf-path=cluster.conf.d
    --output=./tmp-.yaml
    &amp;amp;&amp;amp;
    kops replace --name  --state=s3:// -f ./tmp-.yaml
    &amp;amp;&amp;amp;
    rm -f ./tmp-.yaml
- name: &quot;Apply extra confs on nodes&quot;
  shell: &amp;gt;
    ./utils/genClusterConfig.py
    --cluster-name=
    --cluster-state=s3://
    --conf-path=nodes.conf.d
    --component=ig
    --output=./tmp--nodes.yaml
    &amp;amp;&amp;amp;
    kops replace --name  --state=s3:// -f ./tmp--nodes.yaml
    &amp;amp;&amp;amp;
    rm -f ./tmp--nodes.yaml
- name: &quot;Apply extra confs on master&quot;
  shell: &amp;gt;
    ./utils/genClusterConfig.py
    --cluster-name=
    --cluster-state=s3://
    --conf-path=master.conf.d
    --component=master-
    --output=./tmp--master-.yaml
    &amp;amp;&amp;amp;
    kops replace --name  --state=s3:// -f ./tmp--master-.yaml
    &amp;amp;&amp;amp;
    rm -f ./tmp--master-.yaml
  with_items: &quot;&quot;
  loop_control:
    index_var: index
  when: index &amp;lt; master_count

- name: &quot;Apply plan creation for cluster &quot;
  shell: &amp;gt;
    kops update cluster
    --name 
    --state=s3://
    --yes
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;For a full example follow this link:
&lt;a href=&quot;https://github.com/raresociopath/k8s-ansible&quot; target=&quot;_blank&quot;&gt;Full example&lt;/a&gt;&lt;/p&gt;

&lt;div class=&quot;divider&quot;&gt;&lt;/div&gt;
</description>
        <pubDate>Mon, 29 Oct 2018 00:00:00 +0200</pubDate>
        <link>http://localhost:4000/2018/eks-terraform/</link>
        <guid isPermaLink="true">http://localhost:4000/2018/eks-terraform/</guid>
        
        
        <category>terraform</category>
        
      </item>
    
  </channel>
</rss>
